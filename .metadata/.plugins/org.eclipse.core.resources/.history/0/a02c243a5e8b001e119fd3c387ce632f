package gui;

import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import dao.LopDAO;
import dao.SinhvienDAO;
import model.Lop;
import model.Sinhvien;

public class formSinhvien extends JFrame {

	private JPanel contentPane;
	private JLabel lblNewLabel;
	private JLabel lblNewLabel_1;
	private JLabel lblNewLabel_2;
	private JTextField txtHoTen;
	private JTextField txtDTB;
	private JComboBox cbbLop;
	private JScrollPane scrollPane;
	private JTable table;
	private JButton btnThem;
	private JButton btnSua;
	private JButton btnXoa;
	
	DefaultTableModel model = new DefaultTableModel();
	List<Lop> dsLop = new ArrayList<Lop>();
	LopDAO daoLop = new LopDAO();
	List<Sinhvien> dsSV = new ArrayList<Sinhvien>();
	SinhvienDAO daoSV = new SinhvienDAO();

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					formSinhvien frame = new formSinhvien();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public formSinhvien() {
		initGUI();
		//
		table.setModel(model);
		model.addColumn("MSSV");
		model.addColumn("Họ Tên");
		model.addColumn("ĐTB");
		model.addColumn("Lớp");
		//
		dsLop = daoLop.findALL();
		dsSV = daoSV.findALL();
		for(Sinhvien s:dsSV)
		{
			Object[] o = {s.getMssv(),s.getHoten(),s.getDtb(),s.getLop().getTenlop()};
			model.addRow(o);
		}
		for(Lop l:dsLop)
		{
			cbbLop.addItem(l.getTenlop());
//			for(Sinhvien s:l.getSinhviens())
//			{
//				Object[] o = {s.getMssv(),s.getHoten(),s.getDtb(),s.getLop().getTenlop()};
//				model.addRow(o);
//			}
		}
		//
	}
	private void initGUI() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 433, 300);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		contentPane.add(getLblNewLabel());
		contentPane.add(getLblNewLabel_1());
		contentPane.add(getLblNewLabel_2());
		contentPane.add(getTxtHoTen());
		contentPane.add(getTxtDTB());
		contentPane.add(getCbbLop());
		contentPane.add(getScrollPane());
		contentPane.add(getBtnThem());
		contentPane.add(getBtnSua());
		contentPane.add(getBtnXoa());
	}

	private JLabel getLblNewLabel() {
		if (lblNewLabel == null) {
			lblNewLabel = new JLabel("H\u1ECD T\u00EAn");
			lblNewLabel.setBounds(12, 13, 56, 16);
		}
		return lblNewLabel;
	}
	private JLabel getLblNewLabel_1() {
		if (lblNewLabel_1 == null) {
			lblNewLabel_1 = new JLabel("\u0110TB");
			lblNewLabel_1.setBounds(12, 42, 56, 16);
		}
		return lblNewLabel_1;
	}
	private JLabel getLblNewLabel_2() {
		if (lblNewLabel_2 == null) {
			lblNewLabel_2 = new JLabel("L\u1EDBp");
			lblNewLabel_2.setBounds(12, 74, 56, 16);
		}
		return lblNewLabel_2;
	}
	private JTextField getTxtHoTen() {
		if (txtHoTen == null) {
			txtHoTen = new JTextField();
			txtHoTen.setBounds(73, 10, 330, 22);
			txtHoTen.setColumns(10);
		}
		return txtHoTen;
	}
	private JTextField getTxtDTB() {
		if (txtDTB == null) {
			txtDTB = new JTextField();
			txtDTB.setBounds(73, 39, 330, 22);
			txtDTB.setColumns(10);
		}
		return txtDTB;
	}
	private JComboBox getCbbLop() {
		if (cbbLop == null) {
			cbbLop = new JComboBox();
			cbbLop.setBounds(73, 71, 118, 22);
		}
		return cbbLop;
	}
	private JScrollPane getScrollPane() {
		if (scrollPane == null) {
			scrollPane = new JScrollPane();
			scrollPane.setBounds(12, 141, 391, 99);
			scrollPane.setViewportView(getTable());
		}
		return scrollPane;
	}
	private JTable getTable() {
		if (table == null) {
			table = new JTable();
			table.addMouseListener(new MouseAdapter() {
				@Override
				public void mouseClicked(MouseEvent arg0) {
					int index = table.getSelectedRow();
					if(index != -1)
					{
						Sinhvien sv = dsSV.get(index);
						txtHoTen.setText(sv.getHoten());
						txtDTB.setText(""+sv.getDtb());
						cbbLop.setSelectedItem(sv.getLop().getTenlop());
					}
				}
			});
		}
		return table;
	}
	private JButton getBtnThem() {
		if (btnThem == null) {
			btnThem = new JButton("Th\u00EAm");
			btnThem.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent arg0) {
					try
					{
						String hoTen = txtHoTen.getText();
						if(hoTen.compareTo("")!=0)
						{
							Object o = cbbLop.getSelectedItem();
							String tenLop = o.toString();
							Lop lop = new Lop();
							Sinhvien sv = new Sinhvien();
							for(Lop l:dsLop)
							{
								if(l.getTenlop().compareTo(tenLop)==0)
								{
									lop = l;
								}
							}
							if(txtDTB.getText().compareTo("")!=0)
							{
								double diem = Double.parseDouble(txtDTB.getText());
								if(diem>=0&&diem<=10)
								{
									sv = new Sinhvien(lop,hoTen,diem);
								}
								else
								{
									JOptionPane.showMessageDialog(null, "Điểm không hợp lệ!!!");
									return;
								}
							}
							else
							{
								sv = new Sinhvien(lop,hoTen,null);
							}
							if(daoSV.add(sv))
							{
								dsSV.add(sv);
								Object[] o1 = {sv.getMssv(),sv.getHoten(),sv.getDtb(),sv.getLop().getTenlop()};
								model.addRow(o1);
								JOptionPane.showMessageDialog(null, "Thêm thành công!!!");
							}
							else
							{
								JOptionPane.showMessageDialog(null, "Thêm thất bại!!!");
							}
						}
						else
						{
							JOptionPane.showMessageDialog(null, "Vui lòng nhập Họ Tên!!!");
						}
					}catch (Exception e) 
					{
						JOptionPane.showMessageDialog(null, "Điểm không hợp lệ!!!");
					}
				}
			});
			btnThem.setBounds(12, 103, 97, 25);
		}
		return btnThem;
	}
	private JButton getBtnSua() {
		if (btnSua == null) {
			btnSua = new JButton("S\u1EEDa");
			btnSua.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent e) {
					int index = table.getSelectedRow();
					try
					{
						if(index!=-1)
						{
							Sinhvien sv = dsSV.get(index);
							if(txtHoTen.getText().compareTo("")!=0)
							{
								if(txtDTB.getText().compareTo("")!=0)
								{
									double diem = Double.parseDouble(txtDTB.getText());
									if(diem>=0&&diem<=10)
									{
										sv.setDtb(diem);
									}
									else
									{
										JOptionPane.showMessageDialog(null, "Điểm không hợp lệ!!!");
										return;
									}
								}
								else
								{
									sv.setDtb(null);
								}
								sv.setHoten(txtHoTen.getText());
								Object o = cbbLop.getSelectedItem();
								String tenLop = o.toString();
								Lop lop = new Lop();
								for(Lop l:dsLop)
								{
									if(l.getTenlop().compareTo(tenLop)==0)
									{
										lop = l;
									}
								}
								sv.setLop(lop);
								if(daoSV.update(sv))
								{
									dsSV.set(index, sv);
									model.setRowCount(0);
									for(Sinhvien sv1:dsSV)
									{
										Object[] o100 = {sv1.getMssv(),sv1.getHoten(),sv1.getDtb(),sv1.getLop().getTenlop()};
										model.addRow(o100);
									}
									JOptionPane.showMessageDialog(null, "Sửa thành công!!!");
								}
								else
								{
									JOptionPane.showMessageDialog(null, "Sửa thất bại!!!");
								}
							}
							else
							{
								JOptionPane.showMessageDialog(null, "Vui lòng nhập tên!!!");
							}
						}
						else
						{
							JOptionPane.showMessageDialog(null, "Vui lòng chọn SV cần sửa!!!");
						}
					}catch (Exception e1) 
					{
						JOptionPane.showMessageDialog(null, "Điểm không hợp lệ!!!");
					}
				}
			});
			btnSua.setBounds(157, 103, 97, 25);
		}
		return btnSua;
	}
	private JButton getBtnXoa() {
		if (btnXoa == null) {
			btnXoa = new JButton("Xóa");
			btnXoa.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent e) {
					int index = table.getSelectedRow();
					if(index != -1)
					{
						Sinhvien sv = dsSV.get(index);
						if(daoSV.delete(sv.getMssv()))
						{
							dsSV.remove(index);
							model.removeRow(index);
							JOptionPane.showMessageDialog(null, "Xóa thành công!!!");
						}
						else
						{
							JOptionPane.showMessageDialog(null, "Xóa thất bại!!!");
						}
					}
					else
					{
						JOptionPane.showMessageDialog(null, "Vui lòng chọn SV cần xóa!!!");
					}
				}
			});
			btnXoa.setBounds(306, 103, 97, 25);
		}
		return btnXoa;
	}
}
